scopeName: 'text.dsl'
name: 'Lingvo DSL'
fileTypes: ['dsl']
patterns: [
  {
    match: '^[\\ \\t]*$'
  }
  {
    include: '#macros'
  }
  {
    include: '#comments'
  }
  {
    include: '#indices'
  }
  {
    include: '#escapes'
  }
  {
    include: '#mildTags'
  }
  {
    include: '#references'
  }
  {
    include: '#tilde'
  }
]

repository:

  macros:
    begin: '^\ufeff?#(NAME|INDEX_LANGUAGE|CONTENTS_LANGUAGE|INCLUDE|SOURCE_CODE_PAGE)'
    beginCaptures:
      0:
        name: 'keyword.other.dsl'
    end: '$'
    patterns: [
      {
        include: '#strings'
      }
    ]

  indices:
    patterns: [
      {
        include: '#escapeAndIndices'
      }
      {
        include: '#justIndices'
      }
      {
        include: '#subIndices'
      }
    ]

  justIndices:
    begin: '^[^\\ \\t]'
    end: '$'
    name: 'markup.bold.dsl'
    patterns: [
      {
        include: '#comments'
      }
      {
        include: '#escapes'
      }
    ]

  escapeAndIndices:
    begin: '^\\\\.'
    beginCaptures:
      0:
        name: 'constant.character.escape.dsl'
    end: '$'
    name: 'markup.bold.dsl'
    patterns: [
      {
        include: '#comments'
      }
      {
        include: '#escapes'
      }
    ]

  subIndices:
    begin: '^[\\ \\t]+(@)'
    beginCaptures:
      1:
        name: 'keyword.other.dsl'
    end: '$'
    name: 'markup.bold.dsl'
    patterns: [
      {
        include: '#comments'
      }
      {
        include: '#escapes'
      }
    ]

  strings:
    begin: '"'
    beginCaptures:
      0:
        name: 'punctuation.definition.string.begin.dsl'
    end: '"'
    endCaptures:
      0:
        name: 'punctuation.definition.string.end.dsl'
    name: 'string.quoted.double.dsl'
    patterns: [
      {
        include: '#escapes'
      }
    ]

  numbers:
    match: '\\b(\\d+\\.?\\d*)\\b'
    name: 'constant.numeric.dsl'

  escapes:
    match: '(\\\\.|\\[\\[|\\]\\])'
    name: 'constant.character.escape.dsl'

  attributes:
    match: '\\s+(\\w+)(=)'
    'captures':
      1:
        name: 'entity.other.attribute-name.dsl'
      2:
        name: 'punctuation.definition.tag.dsl'

  attributeConstants:
    match: '\\s+(\\w+)\\b'
    name: 'constant.other.dsl'

  comments:
    begin: '\\{\\{'
    beginCaptures:
      0:
        name: 'punctuation.definition.comment.begin.dsl'
    end: '\\}\\}'
    endCaptures:
      0:
        name: 'punctuation.definition.comment.end.dsl'
    name: 'comment.block.dsl'

  # #dslTags mark as tags supported by GoldenDict DSL tags, the other are marked
  # as invalid tags
  strictTags:
    patterns: [
      # correct DSL tags
      {
        begin: '(\\[)\\s*(/?)(\\*|\'|@|m\\d?\\b|trn\\b|ex\\b|com\\b|url\\b|!trs\\b|lang\\b|ref\\b|sub\\b|sup\\b|br\\b|t\\b|b\\b|i\\b|u\\b|c\\b|s\\b|p\\b)'
        beginCaptures:
          1:
            name: 'punctuation.definition.tag.dsl'
          2:
            name: 'punctuation.definition.tag.dsl'
          3:
            name: 'entity.name.tag.dsl'
        end: '\\]'
        endCaptures:
          0:
            name: 'punctuation.definition.tag.dsl'
        patterns: [
          {
            include: '#attributes'
          }
          {
            include: '#strings'
          }
          {
            include: '#numbers'
          }
          {
            include: '#attributeConstants'
          }
        ]
      }
      # incorrect DSL tags
      {
        begin: '(\\[)\\s*(/?)(?!\\*|\'|@|m\\d?\\b|trn\\b|ex\\b|com\\b|url\\b|!trs\\b|lang\\b|ref\\b|sub\\b|sup\\b|br\\b|t\\b|b\\b|i\\b|u\\b|c\\b|s\\b|p\\b)'
        beginCaptures:
          1:
            name: 'invalid.illegal.dsl'
          2:
            name: 'invalid.illegal.dsl'
          3:
            name: 'invalid.illegal.dsl'
        end: '\\]'
        endCaptures:
          0:
            name: 'invalid.illegal.dsl'
        name: 'invalid.illegal.dsl'
        patterns: [
          {
            include: '#attributes'
          }
          {
            include: '#strings'
          }
          {
            include: '#numbers'
          }
          {
            include: '#attributeConstants'
          }
        ]
      }
    ]

  # this #tags marks every tag, even if the tag is not supported by GoldenDict
  mildTags:
    begin: '(\\[)\\s*(/?)([^\\s\\]]+)'
    beginCaptures:
      1:
        name: 'punctuation.definition.tag.dsl'
      2:
        name: 'punctuation.definition.tag.dsl'
      3:
        name: 'entity.name.tag.dsl'
    end: '\\]'
    endCaptures:
      0:
        name: 'punctuation.definition.tag.dsl'
    patterns: [
      {
        include: '#attributes'
      }
      {
        include: '#strings'
      }
      {
        include: '#numbers'
      }
      {
        include: '#attributeConstants'
      }
    ]

  references:
    begin: '<<'
    beginCaptures:
      0:
        name: 'punctuation.definition.link.begin.dsl'
    end: '>>'
    endCaptures:
      0:
        name: 'punctuation.definition.link.end.dsl'
    name: 'markup.underline.link.dsl'
    patterns: [
      {
        include: '#escapes'
      }
      {
        include: '#comments'
      }
      {
        include: '#mildTags'
      }
    ]

  tilde:
    match: '~'
    name: 'keyword.other.dsl'
